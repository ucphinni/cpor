[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cpor"
version = "0.1.0"
description = "CBOR Protocol Over Reliable (CPOR) - Production-ready async protocol implementation"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "CPOR Development Team"},
]
keywords = ["cbor", "protocol", "async", "ed25519", "messaging"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Framework :: AsyncIO",
]

dependencies = [
    "cbor2>=5.4.0",
    "pynacl>=1.5.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",  # For configuration validation
    "aioquic>=0.9.21",  # For QUIC/HTTP3 transport
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]
typing = [
    "mypy>=1.5.0",
    "types-pyyaml",
]

[project.urls]
Homepage = "https://github.com/cpor-project/cpor"
Documentation = "https://cpor.readthedocs.io"
Repository = "https://github.com/cpor-project/cpor"
"Bug Tracker" = "https://github.com/cpor-project/cpor/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
cpor = ["py.typed"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=cpor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/cpor"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cbor2.*",
    "nacl.*",
    "aioquic.*",
]
ignore_missing_imports = true

[tool.black]
target-version = ["py312"]
line-length = 88
skip-string-normalization = false
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cpor"]
known_third_party = ["cbor2", "nacl", "yaml", "aioquic", "pytest"]

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.bandit]
targets = ["src/cpor"]
exclude_dirs = ["tests"]
skips = ["B101"]  # assert_used

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]
